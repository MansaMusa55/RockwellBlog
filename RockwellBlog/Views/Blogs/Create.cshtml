@model RockwellBlog.Models.Blog
@using RockwellBlog.Services
@using Microsoft.Extensions.Configuration
@inject IBlogFileService _fileService
@inject IConfiguration _configuration

@{
    ViewData["Title"] = "Create";
    ViewData["HeaderText"] = "Create New Blog";
    ViewData["SubText"] = "Enter Information Below";

    var DefaultImage = await _fileService.EncodeFileAsync(_configuration["DefaultHomePageImage"]);
    var DefaultContentType = _configuration["DefaultHomePageImage"].Split('.')[1];
    ViewData["HeaderImage"] = _fileService.DecodeImage(DefaultImage, DefaultContentType);

}

<h1>Create</h1>

<h4>Blog</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ImageFile" class="control-label"></label>
                <input asp-for="ImageFile" type="file" class="form-control" />
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}