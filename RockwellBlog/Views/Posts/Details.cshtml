@using RockwellBlog.Services
@model RockwellBlog.Models.Post
@using Microsoft.Extensions.Configuration
@inject IBlogFileService _fileService
@inject IConfiguration _configuration


@{
    ViewData["Title"] = "Details";
    ViewData["HeaderText"] = "Samuel's Blog Post";

    var DefaultImage = await _fileService.EncodeFileAsync(_configuration["DefaultHomePageImage"]);
    var DefaultContentType = _configuration["DefaultHomePageImage"].Split('.')[1];
    ViewData["HeaderImage"] = _fileService.DecodeImage(DefaultImage, DefaultContentType);

}

<article>
    <div class="container">
        <div class="row">
            <div class="card border-warning">
                <div class="col-lg-8 col-md-10 mt-3 mx-auto">
                    @Html.Raw(Model.Content)
                </div>
            </div>
        </div>
    </div>
</article>

<hr />

@*Task 1: Prompt the anonymous user to login to add a comment*@
@if (!User.Identity.IsAuthenticated)
{
    <a class="btn-dark btn-block btn-sm rounded" asp-area="Identity"
       asp-page="/Account/Login"
       asp-route-returnUrl="@Url.Action("Details", "Posts", new { id = Model.Id})">Login to add a comment</a>
}
else
{
    <div class="row">
        <div class="col-8 mx-auto">
            <div class="card border-warning">
                <h3 class="text-center">ADD COMMENT</h3>
                <form asp-action="Create" asp-controller="Comments" method="post">
                    <input type="hidden" name="PostId" value="@Model.Id" />
                    <textarea name="Body" rows="10" class="form-control"></textarea>
                    <button class="btn btn-dark btn-block btn-sm" type="submit">Submit</button>
                </form>
            </div>
    </div>
</div>
    }

    <hr />
    <div class="btn-sm btn-dark btn-block">@Model.Comments.Count Comment(s)</div>
    @foreach (var comment in Model.Comments.OrderByDescending(c => c.Created))
    {<div class="card border-warning">
            <div class="row">

                <div class="col">
                    <div class="media border p-3">
                        <img src="@_fileService.DecodeImage(comment.Author.ImageData, comment.Author.ContentType)" alt="@comment.Author.FullName" class="mr-3 mt-3 rounded-circle" style="width:60px;">
                        <div class="media-body">
                            <h4>@comment.Author.FullName <small><i>Posted on @comment.Created.ToString("MMM dd, yyyy")</i></small></h4>
                            <p>@comment.Body</p>
                        </div>
                    </div>
                </div>
            </div>
     </div>
    }









